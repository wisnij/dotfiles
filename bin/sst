#!/usr/bin/perl
# adapted from http://stackoverflow.com/questions/1075947/can-i-use-gnu-screen-completely-transparently-automatically

use strict;
use warnings;
use Getopt::Long qw(:config bundling require_order);

my $usage = "Usage: $0 [OPTION...] HOST [SESSION_NAME] [SSH_OPTION...]\n";
my $helpmsg = $usage . <<'EOF;';
Log into a remote machine and start a tmux session named SESSION_NAME.  If a
session with that name is already running, attach to it.  Defaults to 'default'
if a name is not specified.

  -l, --list   display the tmux sessions available on the login host
      --help   display this help and exit
EOF;

my $list;
GetOptions( 'l|list' => \$list,
            'help'   => sub { print $helpmsg; exit } )
    or die $usage . "Try `$0 --help' for more information.\n";

my ($host, $session, @ssh_opts);
while( @ARGV )
{
    my $opt = shift @ARGV;
    if   ( $opt =~ /^-\w$/ )      { push @ssh_opts, $opt, shift @ARGV }
    elsif( $opt =~ /^-\w/  )      { push @ssh_opts, $opt }
    elsif( not defined $host )    { $host = $opt }
    elsif( not defined $session ) { $session = $opt }
    else                          { push @ssh_opts, $opt }
}

die $usage if not defined $host;
my $optstring = join ' ', @ssh_opts;

if( $list )
{
    my $output = qx(ssh $optstring $host tmux list-sessions 2>&1);
    print $output;
    print "$0: $host: no tmux sessions found\n"
        if $output =~ /failed to connect to server/;
}
else
{
    my $new_session_name = $session // 'default';
    my $attach_cmd = 'tmux attach-session';
    $attach_cmd .= " -t '$session'" if defined $session;

    system qq(ssh $optstring -t $host "$attach_cmd || tmux new-session -s '$new_session_name'");
}
